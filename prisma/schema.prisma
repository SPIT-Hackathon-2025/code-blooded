generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  username      String
  email         String
  password      String
  phone         String
  otp           String?
  otpExpiration DateTime?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Commit        Commit[]
  teams         UserTeam[]
}

model Team {
  id           String         @id @default(uuid())
  name         String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  CodeDocument CodeDocument[]
  users        UserTeam[]
}

model UserTeam {
  id     String @id @default(uuid())
  userId String
  teamId String
  role   Role   @default(VIEWER)
  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CodeDocument {
  id        String   @id @default(uuid())
  content   String
  language  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  teamId    String
  Team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  Commit    Commit[]
}

model Commit {
  id           String       @id
  message      String
  authorId     String
  documentId   String
  changes      String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime
  content      String
  User         User         @relation(fields: [authorId], references: [id])
  CodeDocument CodeDocument @relation(fields: [documentId], references: [id])
}

enum Role {
  EDITOR
  VIEWER
  ADMIN
}
